// Code generated by goctl. DO NOT EDIT.
package types

type BotCreateReply struct {
	ID string `json:"id" label:"机器人ID"`
}

type BotCreateReq struct {
	Name   string `json:"name" validate:"required,max=50" label:"机器人名称"`
	Avatar string `json:"avatar" validate:"max=255" label:"机器人头像"`
	Desc   string `json:"desc,optional" validate:"max=255" label:"机器人描述"`
}

type BotDeleteReply struct {
}

type BotDeleteReq struct {
	ID int64 `json:"id" validate:"required,min=1" label:"机器人ID"`
}

type BotDetailReply struct {
	ID     int64  `json:"id" label:"机器人ID"`
	Name   string `json:"name" label:"机器人名称"`
	Avatar string `json:"avatar" label:"机器人头像"`
	Desc   string `json:"desc" label:"机器人描述"`
	Prompt string `json:"prompt" label:"机器人基础提示词配置"`
}

type BotDetailReq struct {
	ID int64 `json:"id" validate:"required,min=1" label:"机器人ID"`
}

type BotListDetail struct {
	ID     int64  `json:"id" label:"机器人ID"`
	Name   string `json:"name" label:"机器人名称"`
	Avatar string `json:"avatar" label:"机器人头像"`
	Desc   string `json:"desc" label:"机器人描述"`
}

type BotListReply struct {
	Total    int              `json:"total" label:"总数"`
	Page     int              `json:"page" label:"页码"`
	PageSize int              `json:"page_size" label:"每页数量"`
	List     []*BotListDetail `json:"list" label:"机器人列表"`
}

type BotListReq struct {
	Page     int `json:"page" validate:"required,min=1" label:"页码"`
	PageSize int `json:"page_size" validate:"required,min=1" label:"每页数量"`
}

type BotPromptUpdateReply struct {
}

type BotPromptUpdateReq struct {
	ID     int64  `json:"id" validate:"required,min=1" label:"机器人ID"`
	Prompt string `json:"prompt" validate:"required,max=1000" label:"机器人基础提示词配置"`
}

type BotReplicateReply struct {
	ID int64 `json:"id" label:"机器人ID"`
}

type BotReplicateReq struct {
	ID int64 `json:"id" validate:"required,min=1" label:"机器人ID"`
}

type BotUpdateReply struct {
}

type BotUpdateReq struct {
	ID     int64  `json:"id" validate:"required,min=1" label:"机器人ID"`
	Name   string `json:"name" validate:"required,max=50" label:"机器人名称"`
	Avatar string `json:"avatar" validate:"max=255" label:"机器人头像"`
	Desc   string `json:"desc,optional" validate:"max=255" label:"机器人描述"`
}

type ChatReply struct {
	Message string `json:"message"`
}

type ChatReq struct {
	Channel string `json:"channel,optional" validate:"required,oneof=wecom openai gemini" label:"渠道"`
	MSG     string `json:"msg,optional"`
	UserID  string `json:"user_id,optional" validate:"required,max=500" label:"用户标识"`
	AgentID int64  `json:"agent_id,optional" validate:"required" label:"应用标识"`
}

type CustomerChatReply struct {
	Message string `json:"message"`
}

type CustomerChatReq struct {
	MsgID      string `json:"msg_id"`
	Msg        string `json:"msg"`
	CustomerID string `json:"customer_id"`
	OpenKfID   string `json:"open_kf_id"`
}

type UserDetailReply struct {
	ID    int64  `json:"id"`
	Email string `json:"email"`
	Name  string `json:"name"`
}

type UserDetailReq struct {
}

type UserLoginReply struct {
	Token string `json:"token"`
}

type UserLoginReq struct {
	Email    string `json:"email,optional" validate:"required,email" label:"邮箱"`
	Password string `json:"password,optional" validate:"required" label:"密码"`
}

type UserRegisterReply struct {
	Message string `json:"message"`
}

type UserRegisterReq struct {
	Avatar   string `json:"avatar,optional" validate:"required" label:"头像"`
	Email    string `json:"email,optional" validate:"required,email" label:"邮箱"`
	Name     string `json:"name,optional" validate:"required,max=50" label:"用户名"`
	Password string `json:"password,optional" validate:"required" label:"密码"`
}
